// SPDX-License-Identifier: MIT
pragma solidity ^0.8.20;

contract Comida {
    
    // Estrucutra para realizar un alimento.
    struct Plato {
        string nombre; // El nombre del platillo.
        string ingredientes; // Los ingredientes que se desean agregar.
        uint tiempo; // El tiempo que se llevará en preparar.
    }

    // Lista dinámica de platos registrados, la información es publica.
    Plato[] public platos;

    // Mapping que relaciona el nombre del plato y sus ingredientes, información pública. 
    mapping(string => string) public ingredientes;

    // Esta función nos da una relación entre el plato y los ingredientes. 
    function nuevoPlato(string memory _nombre, string memory _ingredientes, uint _tiempo) public {
        platos.push(Plato(_nombre, _ingredientes, _tiempo));
        ingredientes[_nombre] = _ingredientes;
    }

    // Función publica para que cualquier persona pueda consultar ingredientes de un plato.
    function verIngredientes(string memory _nombre) public view returns (string memory) {
        return ingredientes[_nombre];
    }
}

contract Tacos is Comida {
    
    // Función para registrar por ejemplo unos tacos.
    function creartacos(string memory _ingredientes, uint _tiempo) external {
        nuevoPlato("tacos", _ingredientes, _tiempo);
    }

    // Función para ver los ingredientes de los tacos.
    function verIngredientestacos() external view returns (string memory) {
        return verIngredientes("tacos");
    }
}